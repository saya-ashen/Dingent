[project]
name = "{{ cookiecutter.project_name }}-mcp"
version = "0.1.0"
description = "AI agent"
readme = "README.md"
authors = [
    {name = "{{ cookiecutter.author_name }}", email = "{{ cookiecutter.author_email }}"},
]
requires-python = ">=3.12, <3.14"

dependencies = [
    "dingent[mcp]",
]

[dependency-groups]
dev = [
    "basedpyright>=1.31.0",
    "ruff<1.0.0,>=0.11.3",
]

[tool.ruff]
target-version = "py313"
line-length = 120

[tool.ruff.lint]
select = [ "E", "W", "F", "I", "B", "C4", "UP", "ARG001" ]
ignore = [
    "B008", # do not perform function calls in argument defaults
    "B904", # Allow raising exceptions without from e, for HTTPException
]

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true

[tool.ruff.format]
docstring-code-format = true
docstring-code-line-length = 20
quote-style = "double"
indent-style = "space"

[tool.basedpyright]
include = ["src/"]
exclude = [ "**/__pycache__" ]
defineConstant = { DEBUG = true }
reportMissingImports = "error"
reportMissingTypeStubs = false
pythonVersion = "3.13"
pythonPlatform = "Linux"
typeCheckingMode = "standard"

[tool.uv]
link-mode = "symlink"
default-groups = "all"
